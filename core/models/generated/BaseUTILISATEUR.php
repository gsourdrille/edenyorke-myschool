<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UTILISATEUR', 'doctrine');

/**
 * BaseUTILISATEUR
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_user
 * @property string $nom
 * @property string $prenom
 * @property string $login
 * @property string $mot_de_passe
 * @property Doctrine_Collection $POST
 * @property Doctrine_Collection $UTILISATEUR_CLASSE
 * @property Doctrine_Collection $UTILISATEUR_NIVEAU
 * @property Doctrine_Collection $UTILISATEUR_TYPE_UTILISATEUR
 * @property Doctrine_Collection $UTILSATEUR_ETABLISSEMENT
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUTILISATEUR extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('UTILISATEUR');
        $this->hasColumn('id_user', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('nom', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('prenom', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('login', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('mot_de_passe', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('POST', array(
             'local' => 'id_user',
             'foreign' => 'id_user'));

        $this->hasMany('UTILISATEUR_CLASSE', array(
             'local' => 'id_user',
             'foreign' => 'id_user'));

        $this->hasMany('UTILISATEUR_NIVEAU', array(
             'local' => 'id_user',
             'foreign' => 'id_user'));

        $this->hasMany('UTILISATEUR_TYPE_UTILISATEUR', array(
             'local' => 'id_user',
             'foreign' => 'id_user'));

        $this->hasMany('UTILSATEUR_ETABLISSEMENT', array(
             'local' => 'id_user',
             'foreign' => 'id_user'));
    }
}